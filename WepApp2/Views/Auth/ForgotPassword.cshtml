@model WepApp2.Models.User

@{
    Layout = null;
    ViewData["Title"] = "استعادة كلمة المرور - معمل الابتكارات";
}
<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"]</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.rtl.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />
    <link href="https://fonts.googleapis.com/css2?family=Tajawal:wght@300;400;500;700&display=swap" rel="stylesheet">
    <link href="~/css/wil-auth-styles.css" rel="stylesheet" />
</head>
<body class="wil-auth-page">
    <div class="container">
        <div class="wil-auth-header">
            <div class="wil-logo-container">
                <img src="~/Images/logo.png" alt="شعار معمل الابتكارات" class="wil-logo" />
            </div>
        </div>

        <div class="wil-auth-box">
            <div class="wil-reset-header">
                <div class="wil-reset-icon">
                    <i class="fas fa-key"></i>
                </div>
                <h3>استعادة كلمة المرور</h3>
                <p>أدخل بريدك الإلكتروني الجامعي وسنرسل لك رابط لإعادة تعيين كلمة المرور</p>
            </div>

            @if (ViewBag.Success == true)
            {
                <div class="wil-alert wil-alert--success">
                    <i class="fas fa-check-circle wil-icon-spacing-sm"></i>
                    تم إرسال رابط استعادة كلمة المرور إلى بريدك الإلكتروني بنجاح.
                </div>
            }

            @if (ViewBag.Error == true)
            {
                <div class="wil-alert wil-alert--danger">
                    <i class="fas fa-exclamation-triangle wil-icon-spacing-sm"></i>
                    البريد الإلكتروني غير مسجل في النظام، تأكد من صحة البريد الإلكتروني.
                </div>
            }

            <form id="wil-reset-form" onsubmit="return false;">
                <div class="wil-mb-3">
                    <label asp-for="Email" class="wil-form-label">
                        <i class="fas fa-envelope wil-icon-spacing-sm"></i>
                        البريد الإلكتروني الجامعي:
                    </label>
                    <input asp-for="Email" class="form-control wil-form-control" type="email" placeholder="example@@kau.edu.sa" required />
                    <div class="wil-form-text">يجب أن يكون البريد الإلكتروني مسجل مسبقاً في النظام</div>
                </div>

                <button type="submit" class="btn wil-btn-primary wil-mb-3" id="wil-submit-btn">
                    <i class="fas fa-paper-plane wil-icon-spacing-sm"></i>
                    إرسال رابط الاستعادة
                </button>

                <a href="/Auth/Login" class="wil-link wil-link--back">
                    <i class="fas fa-arrow-right wil-icon-spacing-sm"></i>
                    العودة لتسجيل الدخول
                </a>
            </form>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('wil-reset-form');
            const submitBtn = document.getElementById('wil-submit-btn');
            const emailInput = document.querySelector('input[type="email"]');

            // Email domains - using String.fromCharCode to avoid Razor conflicts
            const atSymbol = String.fromCharCode(64);
            const kauDomain = atSymbol + 'kau.edu.sa';
            const stuDomain = atSymbol + 'stu.kau.edu.sa';

            // Email validation function
            function isValidUniversityEmail(email) {
                return email && (email.includes(kauDomain) || email.includes(stuDomain));
            }

            // Email validation
            emailInput.addEventListener('input', function () {
                const email = this.value;
                if (email && !isValidUniversityEmail(email)) {
                    this.setCustomValidity('يجب استخدام البريد الإلكتروني الجامعي (' + kauDomain + ' أو ' + stuDomain + ')');
                } else {
                    this.setCustomValidity('');
                }
            });

            // Form submission with loading state
            form.addEventListener('submit', function (e) {
                e.preventDefault();

                const email = emailInput.value.trim();

                // Validate email format
                if (!email || !isValidUniversityEmail(email)) {
                    alert('يرجى إدخال بريد إلكتروني جامعي صحيح');
                    return;
                }

                submitBtn.classList.add('wil-btn-primary--loading');
                submitBtn.disabled = true;

                // Simulate API call - In real app, this would be server-side validation
                setTimeout(function () {
                    // Valid emails for demo
                    const validEmails = [
                        'admin' + kauDomain,
                        'test' + stuDomain,
                        'student' + stuDomain,
                        'professor' + kauDomain
                    ];

                    const isValidEmail = validEmails.includes(email) ||
                        email.endsWith(kauDomain) ||
                        email.endsWith(stuDomain);

                    if (isValidEmail) {
                        // Redirect to login page with success message
                        window.location.href = '/Auth/Login?resetSuccess=true';
                    } else {
                        // Show error message and stay on page
                        submitBtn.classList.remove('wil-btn-primary--loading');
                        submitBtn.disabled = false;

                        // Remove existing alerts
                        const existingAlerts = document.querySelectorAll('.wil-alert');
                        existingAlerts.forEach(function (alert) {
                            alert.remove();
                        });

                        // Show error alert
                        const errorAlert = document.createElement('div');
                        errorAlert.className = 'wil-alert wil-alert--danger';
                        errorAlert.style.animation = 'wil-slideUp 0.3s ease-out';
                        errorAlert.innerHTML = '<i class="fas fa-exclamation-triangle wil-icon-spacing-sm"></i>' +
                            'البريد الإلكتروني غير مسجل في النظام، تأكد من صحة البريد الإلكتروني.';

                        // Insert error alert
                        const resetHeader = document.querySelector('.wil-reset-header');
                        resetHeader.insertAdjacentElement('afterend', errorAlert);

                        // Auto-hide error message after 6 seconds
                        setTimeout(function () {
                            errorAlert.style.opacity = '0';
                            errorAlert.style.transform = 'translateY(-20px)';
                            setTimeout(function () {
                                errorAlert.remove();
                            }, 300);
                        }, 6000);
                    }
                }, 1500);
            });

            // Auto-hide success/error messages after 5 seconds
            const alerts = document.querySelectorAll('.wil-alert');
            alerts.forEach(function (alert) {
                setTimeout(function () {
                    alert.style.opacity = '0';
                    alert.style.transform = 'translateY(-20px)';
                    setTimeout(function () {
                        alert.style.display = 'none';
                    }, 300);
                }, 5000);
            });
        });
    </script>
</body>
</html>